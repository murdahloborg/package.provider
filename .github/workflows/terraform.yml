name: publish_nuget

on:
  push:
    branches: [main]
      
jobs:
  build:
    runs-on: ubuntu-latest    
    outputs: 
      Version: ${{ steps.gitversion.outputs.SemVer }}
      CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }} 

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 #fetch-depth is needed for GitVersion
        
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.8
      with:
        versionSpec: 5.x
    
    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v0.9.8
      id: gitversion 
    - name: Display GitVersion outputs
      run: |
        echo "Version: ${{ steps.gitversion.outputs.SemVer }}"
        echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"
    
    #Build/pack the project
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Build and Pack NuGet package
      run: dotnet pack murdahloborg.sample/murdahloborg.sample.csproj -p:Version='${{ steps.gitversion.outputs.SemVer }}' -c Release
    - name: Upload NuGet package to GitHub
      uses: actions/upload-artifact@v3
      with:
        name: nugetPackage
        path: murdahloborg.sample/bin/Release/ 
        
  release:
    runs-on: ubuntu-latest    
    needs: build
    if: github.ref == 'refs/heads/main' # only run job if on the master branch   
    
    steps:  
    - name: Download nuget package artifact
      uses: actions/download-artifact@v3
      with:
        name: nugetPackage

    - name: Prep packages
      run: dotnet nuget add source --username murdahloborgapp --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/murdahloborg/index.json"
    
    - name: Push package to GitHub packages 
      if: needs.build.outputs.CommitsSinceVersionSource > 0   
      run: dotnet nuget push nugetPackage/*.nupkg --api-key ${{ secrets.GITHUB_TOKEN }}  --source "github"
    
    - name: Create Release
      if: 1 == 0 #needs.build.outputs.CommitsSinceVersionSource > 0 
      uses: actions/create-release@v1
      with:
        tag_name: ${{ needs.build.outputs.Version }}
        release_name: Release ${{ needs.build.outputs.Version }}
    
    - name: Create Release
      if: needs.build.outputs.CommitsSinceVersionSource > 0 
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ needs.build.outputs.Version }}
        name: Release ${{ needs.build.outputs.Version }}
        artifacts: "nugetPackage/*"
        token: ${{ secrets.GITHUB_TOKEN }}